-- Nettoyer l'ancienne table physical_card_requests puisqu'on utilise maintenant les colonnes dans profiles

-- 1) V√©rifier si l'ancienne table existe
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'physical_card_requests') THEN
        RAISE NOTICE '‚ö†Ô∏è  Ancienne table physical_card_requests trouv√©e';
        RAISE NOTICE 'üîÑ Migration vers les colonnes profiles recommand√©e';
    ELSE
        RAISE NOTICE '‚úÖ Aucune ancienne table √† nettoyer';
    END IF;
END $$;

-- 2) Optionnel: Migrer les donn√©es existantes vers profiles (si l'ancienne table existe)
DO $$
DECLARE
    migration_count integer := 0;
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'physical_card_requests') THEN
        -- Migrer les demandes existantes vers profiles
        UPDATE profiles 
        SET 
            physical_card_requested = true,
            physical_card_status = 'requested',
            physical_card_request_date = pcr.created_at,
            physical_card_notes = pcr.notes,
            physical_card_tracking_number = pcr.tracking_number
        FROM physical_card_requests pcr
        WHERE profiles.id = pcr.user_id;
        
        GET DIAGNOSTICS migration_count = ROW_COUNT;
        RAISE NOTICE 'üì¶ % demandes migr√©es vers profiles', migration_count;
    END IF;
END $$;

-- 3) Supprimer l'ancienne table (ATTENTION: perte de donn√©es si pas migr√©es)
-- D√©commentez cette section SEULEMENT apr√®s avoir v√©rifi√© la migration
/*
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'physical_card_requests') THEN
        DROP TABLE physical_card_requests CASCADE;
        RAISE NOTICE 'üóëÔ∏è  Ancienne table physical_card_requests supprim√©e';
    END IF;
END $$;
*/

-- 4) V√©rifier que les nouvelles colonnes existent dans profiles
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default,
    CASE 
        WHEN column_name LIKE '%physical_card%' THEN '‚úÖ NOUVELLE COLONNE'
        ELSE 'üìã COLONNE STANDARD'
    END as column_status
FROM information_schema.columns 
WHERE table_name = 'profiles' 
AND column_name LIKE '%physical_card%'
ORDER BY column_name;

-- 5) Statistiques des demandes de cartes physiques
SELECT 
    COUNT(*) as total_users,
    COUNT(*) FILTER (WHERE physical_card_requested = true) as requested_cards,
    COUNT(*) FILTER (WHERE has_physical_card = true) as delivered_cards,
    COUNT(*) FILTER (WHERE physical_card_status = 'requested') as pending_requests,
    COUNT(*) FILTER (WHERE physical_card_status = 'delivered') as completed_requests
FROM profiles;

-- 6) Message de confirmation
DO $$
BEGIN
    RAISE NOTICE '=== MIGRATION TERMIN√âE ===';
    RAISE NOTICE '‚úÖ Nouvelles colonnes dans profiles configur√©es';
    RAISE NOTICE 'üì± Page admin mise √† jour: /admin/physical-cards';
    RAISE NOTICE 'üîß Code d''inscription mis √† jour pour utiliser profiles';
    RAISE NOTICE '';
    RAISE NOTICE 'üìã PROCHAINES √âTAPES:';
    RAISE NOTICE '1. Tester l''inscription avec "Request Physical Card"';
    RAISE NOTICE '2. V√©rifier la page admin /admin/physical-cards';
    RAISE NOTICE '3. Si tout fonctionne, d√©commenter la section de suppression';
END $$;
